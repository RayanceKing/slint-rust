name: Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # 基础矩阵：独立的基础变量（只能是基本类型）
        os: [ubuntu-latest, macos-latest, windows-latest]
        # 通过 include 组合 os 和 target 的关系
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu  # Linux ARM
          - os: macos-latest
            target: aarch64-apple-darwin       # macOS ARM64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets: ${{ matrix.target }}

      - name: Install platform dependencies
        run: |
          # Linux 依赖
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev pkg-config
          fi

          # Windows 依赖（示例：安装 LLVM）
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            choco install -y llvm
          fi

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/

  android-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip android-ndk-r25b-linux.zip
          echo "$(pwd)/android-ndk-r25b" >> $GITHUB_PATH

      - name: Install Rust Android targets
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi
          echo "[target.aarch64-linux-android]" >> ~/.cargo/config.toml
          echo "linker = \"aarch64-linux-android-clang\"" >> ~/.cargo/config.toml
          echo "[target.armv7-linux-androideabi]" >> ~/.cargo/config.toml
          echo "linker = \"arm-linux-androideabi-clang\"" >> ~/.cargo/config.toml

      - name: Build for Android
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target aarch64-linux-android

      - name: Upload Android artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-binary
          path: target/aarch64-linux-android/release/
