name: Multi-Platform Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu  # Linux ARM64
            cross-toolchain: gcc-aarch64-linux-gnu  # 关键：交叉编译工具链
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          targets: ${{ matrix.target }}

      - name: Add Rust target explicitly
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: rustup target add ${{ matrix.target }}

      - name: Install platform dependencies
        run: |
          # Linux 依赖
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev pkg-config
            # 安装 ARM64 交叉编译工具链
            if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
              sudo apt-get install -y gcc-aarch64-linux-gnu
              echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config.toml
              echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config.toml
            fi
          fi

          # Windows 依赖
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            choco install -y llvm
          fi

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/

  android-build:
    runs-on: ubuntu-latest
    steps:
      # ...（保持原有 Android 步骤不变）
